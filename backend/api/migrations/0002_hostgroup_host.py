# Generated by Django 4.2.23 on 2025-06-19 12:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HostGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="host_groups_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Host",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, unpack_ipv4=True
                    ),
                ),
                (
                    "fqdn",
                    models.CharField(
                        blank=True,
                        help_text="Fully Qualified Domain Name, if IP is not static or for reference.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "ansible_user",
                    models.CharField(
                        default="root",
                        help_text="Default SSH user for Ansible.",
                        max_length=100,
                    ),
                ),
                (
                    "ansible_port",
                    models.PositiveIntegerField(
                        default=22, help_text="SSH port for Ansible."
                    ),
                ),
                (
                    "ssh_key_name",
                    models.CharField(
                        blank=True,
                        help_text="Name/ID of the SSH key to use (managed separately for now).",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Host-specific Ansible variables (e.g., {'ansible_python_interpreter': '/usr/bin/python3'})",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hosts_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="hosts", to="api.hostgroup"
                    ),
                ),
            ],
            options={
                "verbose_name": "Host",
                "verbose_name_plural": "Hosts",
            },
        ),
    ]
